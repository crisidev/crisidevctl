map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}
{% for key, value in services.iteritems() %}{% for port in value['ports'] %}
server {
    listen 443 ssl;
    server_name {{ key }};

    ssl on;
    ssl_certificate /CLUSTER-share/letsencrypt/fullchain.pem;
    ssl_certificate_key /CLUSTER-share/letsencrypt/privkey.pem;
    ssl_session_cache shared:SSL:10m;
    ssl_protocols SSLv3 TLSv1;
    ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
    ssl_prefer_server_ciphers on;

    proxy_set_header Host             $http_host;   # required for docker client's sake
    proxy_set_header X-Real-IP        $remote_addr; # pass on real client's IP
    client_max_body_size 0; # disable any limits to avoid HTTP 413 for large image uploads
    chunked_transfer_encoding on;

    #access_log /var/log/nginx/{{ key }}-ssl-access.log;
    #error_log /var/log/nginx/{{ key }}-ssl-error.log;

    log_format  graylog2_format  '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for" <msec=$msec|connection=$connection|connection_requests=$connection_requests|millis=$request_time>';
    access_log syslog:server=graylog.$DOMAIN:12301 graylog2_format;
    error_log syslog:server=graylog.$DOMAIN:12302;

    location / {
{% if value['htaccess'] == "true" %}
        auth_basic            "Alt!";
        auth_basic_user_file  /etc/nginx/ssl/htpasswd;
{% endif %}
{% if key == "plex.DOMAIN" %}
        if ($http_x_plex_device_name = '') {
            rewrite ^/$ https://$http_host/web/index.html;
        }
        proxy_redirect off;
{% endif %}
        resolver etcd.DOMAIN;
{% if key == "znc.DOMAIN" %}
        set $backend_upstream "https://{{ key }}:{{ port }}";
{% else %}
        set $backend_upstream "http://{{ key }}:{{ port }}";
{% endif %}
        proxy_pass $backend_upstream;
        proxy_http_version 1.1;
        proxy_connect_timeout       600;
        proxy_send_timeout          600;
        proxy_read_timeout          600;
        send_timeout                600;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $http_host;
    }
{% if key == "hub.DOMAIN" %}
    add_header Docker-Distribution-API-Version registry/2.0 always;
    location /v2/ {
        # Do not allow connections from docker 1.5 and earlier
        # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
        if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
          return 404;
        }

        auth_basic            "Alt!";
        auth_basic_user_file  /etc/nginx/ssl/htpasswd;

        resolver etcd.DOMAIN;
        set $backend_upstream "http://{{ key }}:{{ port }}";
        proxy_pass $backend_upstream;
        proxy_http_version 1.1;
        proxy_connect_timeout       600;
        proxy_send_timeout          600;
        proxy_read_timeout          600;
        send_timeout                600;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $http_host;
    }
{% endif %}
}
{% endfor %}{% endfor %}
