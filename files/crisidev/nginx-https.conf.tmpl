map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}
{% for key, value in services.iteritems() %}{% for port in value['ports'] %}
server {
    listen 443 ssl;
    server_name {{ key }};

    ssl on;
    ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;
    ssl_session_cache shared:SSL:10m;

    proxy_set_header Host             $http_host;   # required for docker client's sake
    proxy_set_header X-Real-IP        $remote_addr; # pass on real client's IP
    client_max_body_size 0; # disable any limits to avoid HTTP 413 for large image uploads
  chunked_transfer_encoding on;

  access_log /var/log/nginx/{{ key }}-ssl-access.log;
  error_log /var/log/nginx/{{ key }}-ssl-error.log;

  location / {
{% if value['htaccess'] == "true" %}
        auth_basic            "Alt!";
        auth_basic_user_file  /etc/nginx/ssl/htpasswd;
{% endif %}
        resolver etcd.DOMAIN;
        set $backend_upstream "http://{{ key }}:{{ port }}";
        proxy_pass $backend_upstream;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $http_host;
    }
}
{% endfor %}{% endfor %}
